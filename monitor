#!/usr/bin/python

import time
try:
    import paho.mqtt.client as mqtt
except ImportError:
    import os
    import inspect
    cmd_subfolder = os.path.realpath(os.path.abspath(os.path.join(os.path.split(inspect.getfile( inspect.currentframe() ))[0],"../src")))
    if cmd_subfolder not in sys.path:
        sys.path.insert(0, cmd_subfolder)
    import paho.mqtt.client as mqtt


state = ''
connected = False

def on_connect(client, userdata, flags, rc):
    print('on_connect: userdata=%s rc=%s' % (userdata,  str(rc)))
    (result, mid) = client.subscribe('internet/connected', 0)
    print('on_connect: subscribe=(%d, %d)' % (result,  mid))
    (result, mid) = client.subscribe('internet/condition', 0)
    print('on_connect: subscribe=(%d, %d)' % (result,  mid))

def on_message(client, userdata, message):
    print('on_message: ' + message.topic + ' ' +
        str(message.payload.decode("utf-8") ) + ' ' +  str(message.qos))

def on_publish(client, userdata, mid):
    print('on_publish: userdata=%s mid=%s' % (userdata, str(mid)))

def on_subscribe(client, userdata, mid, granted_qos):
    print('on_subscribe: userdata=%s mid=%s granted_qos=%s' % (userdata, str(mid) , str(granted_qos)))

def on_log(client, userdata, level, message):
    print('on_log: userdata=%s level=%s message=%s' % (userdata, level, message))

client = mqtt.Client('weather1', True)
client.on_message = on_message
client.on_connect = on_connect
client.on_publish = on_publish
client.on_subscribe = on_subscribe
#client.on_log = on_log

client.connect('wintermute', 1883, 60)

client.loop_forever()
